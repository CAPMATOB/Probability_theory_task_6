# ДЗ №6, задача 1. Известно, что генеральная совокупность распределена нормально со средним квадратическим отклонением, 
# равным 16. # Найти доверительный интервал для оценки математического ожидания a с надежностью 0.95,
# если выборочная средняя M = 80, а объем выборки n = 256.

# Вводные данные:
sigma = 16
alpha = 0.05
x = 80
n = 256

import numpy as np
import scipy.stats as stats

# 1) Найдём Z-критерий для alpha = 0.05/2
z = stats.norm.ppf(1-alpha/2)   # 1.959963984540054
print(f'Табличный Z-критерий для alpha/2: {z}')

# 2) Находим границы интервала:
low = x - z * sigma/np.sqrt(n)  # 78.04003601545995
up = x + z * sigma/np.sqrt(n)   # 81.95996398454005
print(f'Доверительный интервал [{low} ; {up}]')

#########################################################


# В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью, получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей, оценить истинное 
# значение величины X при помощи доверительного интервала, покрывающего это значение с доверительной вероятностью 0,95.

# Вводные данные:
a = [6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1]
n = 10
alpha = 0.05

import numpy as np
import scipy.stats as stats

# 1) Находим среднюю арифметическую:
x = np.mean(a)  # 6.590000000000001
print(f'Средняя арифметическая выборки: {x}')

# 2) Находим несмещённое среднее квадратичное отклонение для выборки:
sigma = np.std(a, ddof=1)  # 0.4508017549014448
print(f'Среднее квадратичное отклонение: {sigma}')

# 3) Находим t-критерий Стьюдента со степенью свободы:
t = stats.t.ppf(1-alpha/2, n-1)   # 2.2621571627409915
print(f'Критерий Стьюдента: {t}')

# 4) Находим доверительный интервал:
low = x - t * sigma/np.sqrt(n)  # 6.267515851415713 
up = x + t * sigma/np.sqrt(n)   # 6.912484148584288
print(f'Доверительный интервал: [{low}; {up}]')


##########################################################


# Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей 178, 165, 165, 173, 168, 155, 160, 164, 178, 175
# Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.

# Вводные данные:
a = [178, 165, 165, 173, 168, 155, 160, 164, 178, 175]  # родители
b = [175, 167, 154, 174, 178, 148, 160, 167, 169, 170]  # дети
alpha = 0.05

import numpy as np
import scipy.stats as stats

# 1) Находим разницу средних арифметических по выборкам:
delta = np.mean(a) - np.mean(b) # 1.9000000000000057
print(f'Разница средних арифметических по выборкам: {delta}')

# 2) Находим общую дисперсию:
d = 1/2 * (np.var(a, ddof=1) + np.var(b, ddof=1))  # 75.58333333333334
print(f'Общая дисперсия: {d}')

# 3) Нахождим стандартную ошибку разности средних:
se = np.sqrt(d/len(a) + d/len(b))   # 3.8880157750022915
print(f'Стандартная ошибка разности средних: {se}')

# 4) Находим t-критерий Стьюдента с помощью функции:
t = stats.t.ppf(1-alpha/2, (len(a)+len(b))-2)   # 2.10092204024096
print(f'Критерий Стьюдента: {t}')

# 5) Находим доверительный интервал при уровне статистической значимости 5%:
low = delta - t * se    # -6.268418034506846
up = delta + t * se     # 10.068418034506857
print(f'Доверительный интервал [{low}; {up}]')